<?php

use Illuminate\Support\Facades\Config;
use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CreateTagTable extends Migration
{
    /**
     * @var string
     */
    protected $tagsTable;

    /**
     * @var string
     */
    protected $taggablesTable;

    /**
     * @var string
     */
    protected $tagCategoryTable;

    /**
     * CreateTagTable constructor.
     */
    public function __construct()
    {
        $this->tagsTable = Config::get('tag.tags_table');
        $this->taggablesTable = Config::get('tag.taggables_table');
        $this->tagCategoryTable = Config::get('tag.tag_category_table');
    }

    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create($this->tagsTable, function (Blueprint $table) {
            $table->increments('id');
            $table->string('name');
            $table->timestamps();

            $table->unique(['name']);
        });

        Schema::create($this->taggablesTable, function (Blueprint $table) {
            $table->increments('id');
            $table->unsignedInteger('tag_id');
            $table->morphs('taggable');
        });

        Schema::create($this->tagCategoryTable, function (Blueprint $table) {
            $table->increments('id');
            $table->unsignedInteger('category_id');
            $table->string('category_type');
            $table->unsignedInteger('tag_id');
            $table->string('url_rewrite');
            $table->string('meta_title')->nullable();
            $table->string('meta_keywords')->nullable();
            $table->text('meta_description')->nullable();

            $table->unique(['category_type', 'category_id', 'tag_id']);
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists($this->tagCategoryTable);
        Schema::dropIfExists($this->taggablesTable);
        Schema::dropIfExists($this->tagsTable);
    }
}